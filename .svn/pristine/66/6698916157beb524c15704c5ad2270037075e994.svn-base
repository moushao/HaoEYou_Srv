package com.haoeyou.srv.fragment;

import android.content.Context;
import android.os.Bundle;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.widget.DividerItemDecoration;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;

import com.cjj.MaterialRefreshLayout;
import com.cjj.MaterialRefreshListener;
import com.haoeyou.srv.R;
import com.haoeyou.srv.activity.UserArchivesActivity;
import com.haoeyou.srv.adapter.BaseRecyclerAdapter;
import com.haoeyou.srv.base.BaseFragment;
import com.haoeyou.srv.event.ItemListener;
import com.haoeyou.srv.mvp.presenter.BasePresenter;
import com.haoeyou.srv.utils.DepartListHolder;
import com.haoeyou.srv.utils.ToastUtils;
import com.haoeyou.srv.utils.UserListHolder;

import java.util.ArrayList;

import butterknife.Bind;
import butterknife.ButterKnife;

public class UserFragment extends BaseFragment {
    public final static String TAG = "FourthFragment";
    @Bind(R.id.filter)
    EditText mFilter;
    @Bind(R.id.user_recycle)
    RecyclerView mUserRecycle;
    @Bind(R.id.refresh)
    MaterialRefreshLayout mRefresh;
    private Context mContext;
    private BaseRecyclerAdapter mUserAdapter;

    @Override
    protected int getLayoutId() {
        return R.layout.fragment_user;
    }

    @Override
    protected void initInjector() {
        mContext = getActivity();
    }

    @Override
    public BasePresenter getPresenter() {
        return null;
    }

    @Override
    protected void initEventAndData() {
        initView();
    }

    @Override
    protected void lazyLoadData() {

    }

    private void initView() {
        mRefresh.setWaveColor(0xffffffff);
        mRefresh.setIsOverLay(false);
        mRefresh.setWaveShow(true);
        mRefresh.setMaterialRefreshListener(new MaterialRefreshListener() {
            @Override
            public void onRefresh(MaterialRefreshLayout materialRefreshLayout) {
                ToastUtils.showToast(getActivity(), "刷新了");
            }
        });
        LinearLayoutManager mgrDepart = new LinearLayoutManager(mContext);
        mgrDepart.setOrientation(LinearLayoutManager.VERTICAL);
        mUserRecycle.setLayoutManager(mgrDepart);
        mUserRecycle.addItemDecoration(new DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL));
        setDepartmentAdapter();
    }

    public void setDepartmentAdapter() {
        ArrayList<String> list = new ArrayList<>();
        for (int i = 0; i < 10; i++) {
            list.add("1");
        }
        if (mUserRecycle == null)
            return;
        if (mUserAdapter == null) {
            mUserAdapter = new BaseRecyclerAdapter(list, R.layout.adapter_user_item, UserListHolder.class, new 
                    ItemListener<String>() {
                @Override
                public void onItemClick(View view, int position, String mData) {
                    UserArchivesActivity.startAction(mContext, UserFragment.TAG);
                }
            });
            mUserRecycle.setAdapter(mUserAdapter);
        } else {
            if ((mUserAdapter.getItem(0) == null) && (list.size() == 0))
                return;
            if ((mUserAdapter.getItem(0) == null) || (list.size() == 0))
                mUserAdapter.setmDatas(list);
        }
    }

    @Override
    public void onResume() {
        super.onResume();
    }
}
